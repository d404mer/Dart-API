openapi: 3.0.0
info:
  title: Dart Server API
  version: 1.0.0
  

servers:
  - url: https://dart-server-back.up.railway.app/api
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: ID пользователя
        name:
          type: string
          description: Имя пользователя
        email:
          type: string
          format: email
          description: Электронная почта пользователя
        roleId:
          type: integer
          description: ID роли

    VideoInput:
      type: object
      properties:
        title:
          type: string
          description: Название видео
        description:
          type: string
          description: Описание видео
        iframe:
          type: string
          description: Код iframe
        date:
          type: string
          format: date
          description: Дата видео
        categoryId:
          type: integer
          description: ID категории
      required:
        - title
        - description
        - iframe
        - date
        - categoryId

    Video:
      type: object
      properties:
        id:
          type: integer
          description: ID видео
        title:
          type: string
          description: Название видео
        description:
          type: string
          description: Описание видео
        iframe:
          type: string
          description: Код iframe
        date:
          type: string
          format: date
          description: Дата видео
        categoryId:
          type: integer
          description: ID категории
        Category:
          type: object
          properties:
            name:
              type: string
              description: Название категории
        likesCount:
          type: integer
          description: Количество лайков

    Category:
      type: object
      properties:
        id:
          type: integer
          description: ID категории
        name:
          type: string
          description: Название категории

    LikeInput:
      type: object
      properties:
        userId:
          type: integer
          description: ID пользователя, ставящего лайк
        videoId:
          type: integer
          description: ID видео, которому ставят лайк
      required:
        - userId
        - videoId

    Like:
      type: object
      properties:
        id:
          type: integer
          description: ID лайка
        userId:
          type: integer
          description: ID пользователя, ставящего лайк
        videoId:
          type: integer
          description: ID видео, которому ставят лайк

    Role:
      type: object
      properties:
        id:
          type: integer
          description: ID роли
        name:
          type: string
          description: Название роли

paths:
  /user/register:
    post:
      summary: Регистрация нового пользователя
      description: Создает новую учетную запись пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT токен
        '400':
          description: Неверный запрос или email уже существует

  /user/login:
    post:
      summary: Вход пользователя
      description: Аутентифицирует пользователя и возвращает JWT токен
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Электронная почта пользователя
                password:
                  type: string
                  description: Пароль пользователя
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT токен
        '400':
          description: Неверные учетные данные или пользователь не найден

  /user/auth:
    get:
      summary: Проверка JWT токена
      description: Валидирует JWT токен и возвращает новый токен, если он действителен
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешная валидация токена
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Новый JWT токен
        '401':
          description: Недействительный или истекший токен

  /user:
    get:
      summary: Получить всех пользователей
      description: Возвращает список всех пользователей
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Не авторизован

  /user/{id}:
    delete:
      summary: Удалить пользователя по ID
      description: Удаляет пользователя по указанному ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID пользователя для удаления
          schema:
            type: integer
      responses:
        '200':
          description: Успешное удаление
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об удалении
        '404':
          description: Пользователь не найден
        '401':
          description: Не авторизован

  /video:
    post:
      summary: Добавить новое видео
      description: Создает новое видео (требуется роль администратора)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoInput'
      responses:
        '201':
          description: Успешное создание видео
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        '400':
          description: Неверный запрос
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен (требуется роль администратора)

    get:
      summary: Получить все видео
      description: Возвращает список всех видео
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'

  /video/{id}:
    get:
      summary: Получить видео по ID
      description: Возвращает видео по указанному ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID видео для получения
          schema:
            type: integer
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        '404':
          description: Видео не найдено

    put:
      summary: Обновить видео по ID
      description: Обновляет видео по указанному ID (требуется роль администратора)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID видео для обновления
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoInput'
      responses:
        '200':
          description: Успешное обновление видео
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
        '400':
          description: Неверный запрос
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен (требуется роль администратора)
        '404':
          description: Видео не найдено

    delete:
      summary: Удалить видео по ID
      description: Удаляет видео по указанному ID (требуется роль администратора)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID видео для удаления
          schema:
            type: integer
      responses:
        '200':
          description: Успешное удаление видео
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об удалении
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен (требуется роль администратора)
        '404':
          description: Видео не найдено

  /category:
    post:
      summary: Создать категорию
      description: Создает новую категорию (доступно только администраторам)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название категории
      responses:
        '201':
          description: Успешное создание категории
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Неверный запрос (название категории отсутствует)
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен (требуется роль администратора)

    get:
      summary: Получить все категории или одну категорию по ID
      description: Возвращает список всех категорий или одну категорию по указанному ID
      parameters:
        - in: query
          name: id
          required: false
          description: ID категории для получения (необязательно)
          schema:
            type: integer
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  - $ref: '#/components/schemas/Category'
        '404':
          description: Категория не найдена

  /category/{id}:
    put:
      summary: Обновить категорию
      description: Обновляет категорию по указанному ID (доступно только администраторам)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID категории для обновления
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Новое название категории
      responses:
        '200':
          description: Успешное обновление категории
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Неверный запрос (ID или название категории отсутствуют)
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен (требуется роль администратора)
        '404':
          description: Категория не найдена

    delete:
      summary: Удалить категорию
      description: Удаляет категорию по указанному ID (доступно только администраторам)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID категории для удаления
          schema:
            type: integer
      responses:
        '200':
          description: Успешное удаление категории
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об удалении
        '401':
          description: Не авторизован
        '403':
          description: Доступ запрещен (требуется роль администратора)
        '404':
          description: Категория не найдена

  /like:
    post:
      summary: Поставить лайк видео
      description: Поставить лайк указанному видео
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LikeInput'
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
        '400':
          description: Лайк уже существует
        '404':
          description: Пользователь или видео не найдены

    delete:
      summary: Удалить лайк видео
      description: Удаляет лайк с указанного видео
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: integer
            description: ID пользователя, удаляющего лайк
        - in: query
          name: videoId
          required: true
          schema:
            type: integer
            description: ID видео, с которого удаляют лайк
      responses:
        '200':
          description: Успешное удаление лайка
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об удалении лайка
        '404':
          description: Лайк не найден

  /like/{videoId}:
    get:
      summary: Получить количество лайков у видео
      description: Возвращает количество лайков у видео
      parameters:
        - in: path
          name: videoId
          required: true
          description: ID видео, для которого нужно получить количество лайков
          schema:
            type: integer
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                type: object
                properties:
                  videoId:
                    type: integer
                    description: ID видео
                  likesCount:
                    type: integer
                    description: Количество лайков

  /role:
    post:
      summary: Создать роль
      description: Создает новую роль
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название роли
      responses:
        '200':
          description: Успешное создание роли
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Название роли отсутствует
        '401':
          description: Не авторизован

    get:
      summary: Получить все роли
      description: Возвращает список всех ролей
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '401':
          description: Не авторизован

  /role/{id}:
    delete:
      summary: Удалить роль
      description: Удаляет роль по указанному ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID роли для удаления
          schema:
            type: integer
      responses:
        '200':
          description: Успешное удаление роли
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об удалении
        '401':
          description: Не авторизован
        '404':
          description: Роль не найдена
